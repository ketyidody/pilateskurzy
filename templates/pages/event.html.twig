{% extends "base.html.twig" %}

{% block content %}
    <!-- Hero section -->
    <div class="section fp-auto-height" id="hero-section">
        <div class="section about-section about-one set-bg" data-setbg="{{ asset('img/slider/yoga-2600-1.png') }}">
            <div class="sp-container">
                <div class="hero-content-eighty text-white">
                    <h2>{{ content.title }}</h2>
                    <div class="event-calendar-navigation">
                        <a href="#" id="previous" class="event-calendar-navigation-item">Predchádzajúci týžden</a>
                        <a href="#" id="next" class="event-calendar-navigation-item">Nasledujúci týžden</a>
                    </div>
                    <div id="event-calendar" class="js-calendar-container"></div>
                </div>
            </div>
        </div>
        {{ include('pages/partial/contact-link.html.twig') }}
    </div>
    <!-- Hero section end -->
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        $(function () {
            const dp = new DayPilot.Calendar("event-calendar", {
                theme: "calendar_green",
                viewType: "Week",
                startDate: DayPilot.Date.today(),
                locale: "sk-sk",
                headerDateFormat: "dddd (dd/MM/yyyy)",
                onEventClick: async args => {

                    // const form = [
                    //     {name: "Email", id: 'email'},
                    // ];
                    //
                    // showAllocationOnModal(args.e.data)
                    // const modal = await DayPilot.Modal.form(form, args.e.data, {
                    //     okText: 'Register',
                    // });
                    //
                    // if (modal.canceled) {
                    //     return;
                    // }

                    var modal = new DayPilot.Modal({
                        onClose: function(args) {
                            console.log("Modal dialog closed");
                        }
                    });
                    modal.showUrl('/api/event/modal/' + args.e.data.id);

                    // $.ajax({
                    //     url: '/api/event/register',
                    //     method: 'POST',
                    //     data: modal.result,
                    // })

                    eventAllocation(args.e.data.id)

                    dp.events.update(modal.result);

                },
                onBeforeEventRender: args => {
                    args.data.barBackColor = "transparent";
                    if (!args.data.barColor) {
                        args.data.barColor = "#333";
                    }
                },
            });
            dp.init();

            const app = {
                elements: {
                    previous: document.getElementById('previous'),
                    next: document.getElementById('next')
                },
                init() {
                    this.addEventHandlers();
                },
                addEventHandlers() {
                    this.elements.previous.addEventListener('click', (ev) => {
                        ev.preventDefault();
                        this.previous();
                    });
                    this.elements.next.addEventListener('click', (ev) => {
                        ev.preventDefault();
                        this.next();
                    });
                },
                previous() {
                    const startDate = dp.startDate.addDays(-7);
                    dp.update({startDate: startDate});
                },
                next() {
                    const startDate = dp.startDate.addDays(7);
                    dp.update({startDate: startDate});
                },
            };
            app.init();
            initEvents(dp);
        })

        async function initEvents(dp)
        {
            $.ajax({
                url: '/api/events/2024-02-08',
                method: 'POST',
                success: function (data) {
                    $.each(data, function () {
                        var e = new DayPilot.Event({
                            start: new DayPilot.Date(this.dateTime),
                            end: new DayPilot.Date(this.dateTime).addHours(this.duration),
                            id: this.id,
                            html: '<div class="event-title">' + this.name + '</div><div class="event-allocation-container"><span class="event-allocation" data-event-id="' + this.id + '"></span>/<span class="event-capacity">' + this.capacity + '</span></div>',
                            barColor: "#6aa84f",
                            capacity: this.capacity,
                        });
                        dp.events.add(e);
                        eventAllocation(this.id);
                    });
                },
            })
        }

        function eventAllocation(eventId) {
            $.getJSON('/api/event/allocation/'+eventId, function(data) {
                $('.event-allocation[data-event-id=' + eventId + ']').append(data.allocation);
            })
        }

        function showAllocationOnModal(eventData) {
            $.getJSON('/api/event/allocation/'+eventData.id, function(data) {
                $('.modal_default_input').append('<div class="event-modal-allocation">');
                $('.event-modal-allocation').html('Capacity: ' + data.allocation + '/' + eventData.capacity)
            })
        }

    </script>
{% endblock %}